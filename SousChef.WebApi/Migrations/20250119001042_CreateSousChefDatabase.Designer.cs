// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SousChef.WebApi._3._Data_Access_Layer;

#nullable disable

namespace SousChef.WebApi.Migrations
{
    [DbContext(typeof(SousChefDbContext))]
    [Migration("20250119001042_CreateSousChefDatabase")]
    partial class CreateSousChefDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CS_AS")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.Ingredient", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.Meal", b =>
                {
                    b.Property<Guid>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MealDietaryRestrictions")
                        .HasColumnType("int");

                    b.Property<string>("MealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MealId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.MealIngredients", b =>
                {
                    b.Property<Guid>("MealIngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IngredientId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("IngredientQuantity")
                        .HasColumnType("float");

                    b.Property<string>("IngredientUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MealId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Purchased")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MealIngredientId");

                    b.HasIndex("IngredientId");

                    b.HasIndex("IngredientId1");

                    b.HasIndex("MealId");

                    b.ToTable("MealIngredients");
                });

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.MealPlan", b =>
                {
                    b.Property<Guid>("MealPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("MealPlanDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MealPlanId");

                    b.HasIndex("UserId");

                    b.ToTable("MealPlans");
                });

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.MealPlanMeals", b =>
                {
                    b.Property<Guid>("MealPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MealId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MealPlanId", "MealId");

                    b.HasIndex("MealId");

                    b.ToTable("MealPlanMeals");
                });

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.MealRecipeStep", b =>
                {
                    b.Property<Guid>("RecipeStepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MealId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StepDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StepSequence")
                        .HasColumnType("int");

                    b.HasKey("RecipeStepId");

                    b.HasIndex("MealId");

                    b.ToTable("MealRecipeSteps");
                });

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DietaryRestrictions")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.MealIngredients", b =>
                {
                    b.HasOne("SousChef.WebApi._0._Models___DTOs.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SousChef.WebApi._0._Models___DTOs.Ingredient", null)
                        .WithMany("MealIngredients")
                        .HasForeignKey("IngredientId1");

                    b.HasOne("SousChef.WebApi._0._Models___DTOs.Meal", "Meal")
                        .WithMany("MealIngredients")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.MealPlan", b =>
                {
                    b.HasOne("SousChef.WebApi._0._Models___DTOs.User", null)
                        .WithMany("MealPlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.MealPlanMeals", b =>
                {
                    b.HasOne("SousChef.WebApi._0._Models___DTOs.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SousChef.WebApi._0._Models___DTOs.MealPlan", "MealPlan")
                        .WithMany("MealPlanMeals")
                        .HasForeignKey("MealPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("MealPlan");
                });

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.MealRecipeStep", b =>
                {
                    b.HasOne("SousChef.WebApi._0._Models___DTOs.Meal", "Meal")
                        .WithMany("MealRecipeSteps")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.Ingredient", b =>
                {
                    b.Navigation("MealIngredients");
                });

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.Meal", b =>
                {
                    b.Navigation("MealIngredients");

                    b.Navigation("MealRecipeSteps");
                });

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.MealPlan", b =>
                {
                    b.Navigation("MealPlanMeals");
                });

            modelBuilder.Entity("SousChef.WebApi._0._Models___DTOs.User", b =>
                {
                    b.Navigation("MealPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
